name: '@apps/server - Build and Deploy to AWS ECS'

on:
  push:
    branches:
      - develop
      - main
    paths:
      - 'apps/server/**/**.**'
      - 'packages/**/**.**'
      - 'mini-dice.Dockerfile'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: ENV파일 생성 | Create ENV File from base64 envireoemnt value
        run: echo '${{ secrets.MINIDICE_SERVER_DEV_ENV }}' | base64 --decode > apps/server/tdol-process.env.dev

      - name: Mini Dice App Hosting 인스턴스 접근용 SSH Key 다운로드 | Download SSH Key for Mini Dice App Hosting Instance
        run: |
          aws ssm get-parameters --with-decryption --names "/mini-dice-v1/server" --query 'Parameters[0].Value' --output text > mini-dice-server.pem
          chmod 400 mini-dice-server.pem

      - name: Docker Registry에 로그인 | Login to Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}

      - name: Docker buildx를 위해 QEMU 셋업 | Set up QEMU for Docker buildx
        uses: docker/setup-qemu-action@v1

      - name: Docker buildx 셋업 Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker 이미지 빌드 & 푸시 | Build the Docker image and push it to the registry
        id: build-image
        run: |
          docker buildx build -f "mini-dice.Dockerfile" -t ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest.dev --platform linux/arm64 --push .
          echo "::set-output name=image::${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest.dev"

      - name: AWS EC2에 SSH 접속 (ec2-user), docker pull, docker stop, docker rm, docker run | SSH to AWS EC2 (ec2-user), docker pull, docker stop, docker rm, docker run
        run: |
          ssh -o StrictHostKeyChecking=no -i "mini-dice-server.pem" ec2-user@${{ secrets.AWS_EC2_INSTANCE_IP }} "docker pull ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest.dev && docker stop mini-dice-server && docker rm mini-dice-server && docker run -p 8080:80 -idt --name mini-dice-server ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest.dev"
